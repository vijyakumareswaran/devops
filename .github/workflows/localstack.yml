name: LocalStack Terraform CI

on: [push, pull_request]

jobs:
  setup:
    runs-on: ubuntu-latest

    services:
      localstack:
        image: localstack/localstack:2.2.0
        ports:
          - "4566:4566"
          - "4510-4559:4510-4559"
        options: >-
          --env SERVICES=lambda
          --env DEFAULT_REGION=ap-southeast-1
          --restart=always
          --env GITHUB_ACTIONS=true
          --env CI=true

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Wait for LocalStack to start
        run: |
          echo "Waiting for LocalStack to start..."
          for i in {1..5}; do
            if curl -s http://localhost:4566/health | grep '"lambda": "available"'; then
              echo "LocalStack is running"
              break
            fi
            echo "Still waiting..."
            sleep 2
          done

      - name: Check LocalStack Health
        run: curl -s http://localhost:4566/health

  terraform:
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Terraform
        run: |
          curl -LO https://releases.hashicorp.com/terraform/1.5.0/terraform_1.5.0_linux_amd64.zip
          unzip terraform_1.5.0_linux_amd64.zip
          sudo mv terraform /usr/local/bin/
          terraform --version

      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y awscli jq
          aws --version

      - name: Set up AWS Credentials
        run: |
          mkdir -p ~/.aws
          echo "[default]" > ~/.aws/credentials
          echo "aws_access_key_id = test" >> ~/.aws/credentials
          echo "aws_secret_access_key = test" >> ~/.aws/credentials
          echo "[my_profile_name]" >> ~/.aws/credentials
          echo "aws_access_key_id = test" >> ~/.aws/credentials
          echo "aws_secret_access_key = test" >> ~/.aws/credentials
          echo "Profile set up for Terraform to use."

      - name: Display AWS Credentials
        run: |
          cat ~/.aws/credentials

      - name: Wait for LocalStack to be ready
        run: |
          echo "Waiting for LocalStack to be ready for Terraform commands..."
          for i in {1..5}; do
            if curl -s http://localstack:4566/health | grep '"lambda": "available"'; then
              echo "LocalStack is ready"
              break
            fi
            echo "Still waiting for LocalStack to be ready..."
            sleep 5
          done

      - name: Initialize Terraform
        run: |
          cd app  # Change directory to where your .tf files are located
          terraform init

      - name: Create or Update Lambda Function
        run: |
          cd app  # Ensure we are in the correct directory
          echo "Updating lambda.tf to create/update lambda resources..."
          terraform plan
          terraform apply --auto-approve -backend-config="profile=my_profile_name"  # Use the profile in backend config

      - name: List Updated Lambda Functions
        run: |
          cd app  # Ensure we are in the correct directory
          echo "Listing updated Lambda functions..."
          aws --endpoint-url=http://localstack:4566 --region ap-southeast-1 lambda list-functions

      - name: Invoke Lambda Function
        run: |
          cd app  # Ensure we are in the correct directory
          echo "Invoking the Lambda function..."
          response=$(aws --endpoint-url=http://localstack:4566 --region ap-southeast-1 lambda invoke --function-name helloworld-localstack output.json)
          cat output.json

      - name: Clean Up
        run: |
          cd app  # Ensure we are in the correct directory
          echo "Cleaning up..."
          terraform destroy --auto-approve

      - name: Check LocalStack Logs
        run: |
          echo "Fetching LocalStack logs..."
          docker ps -q --filter "ancestor=localstack/localstack:2.2.0" | xargs -r docker logs
